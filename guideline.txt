# coding:utf-8
20170714
把数据库sqllite迁移到mysql，为部署到服务器上做准备



游戏模式1：回合制
    游戏流程：
        用户A进入游戏。
        可以创建一局比赛。设置结束回合数。
        用户b进入游戏，可以找到比赛。
        加入比赛。

    游戏开始：
        初始化所有的商品
        初始化金额
        用户A加入订单， 执行订单。A的回合1结束。
        用户B加入订单，执行订单，B的回合1结束。
        。。。
        最后一回合结束
        结算谁的钱多，谁获胜


1. 用户加入订单产品 判断是否已经有对象
    有：加数量
    没有：创建新的对象
2. 用户点击提交按钮
    1. 获取用户姓名



post请求
{
    用户姓名    TODO 用户姓名需要校验唯一性 用户姓名要从cookie里取。防止伪造用户请求。
    用户id    TODO 用户id需要格式化一下
    {
        产品id TODO 产品id需要格式化一下
        购买数量
        # --  单价 -->这个不能作为因为用户可能会改。 单价应该存在服务器上。 TODO 如果加入价格变化，应专门建立 一张乘以系数得到真实价格的表。
    }
    {
        产品id
        购买数量
    }
}

返回：
        游戏局id
        回合id
        status
        message


TODO 部署准备：数据库换成mysql的

TODO 限制输入个数的类型必须为整数：1. web端输入限制。 2. 服务端如果收到小数，进行四舍五入。

问题：
1. 价格超过10000的时候位数显示有问题。 --- 改为超过1000显示1.00k， 超过1000.00k显示1M，更多显示1B，等等。
2. js需要重构，重复提交订单存在bug。
3. 需要增加卖出货物的功能。
4. 货仓里货物的“价值”需要根据市场里的price来定。
5. 游戏的回合控制、对局控制

checkout功能
试验

游戏初始化：
game表中插入数据cash  =  10000, profit = 0 gameround  = 0
第一局开始查询，gamerond = 0, 的cash
提交订单，数据库不动
提交订单，数据库不动
点击下一回合，从Mygoodshistory表查该回合的所有订单，加减得出balance
第一局结束插入， 例如 balance = -1000 , cash = 9000 gameround = 1

留坑：gameid没有处理同一秒内重复的问题。
